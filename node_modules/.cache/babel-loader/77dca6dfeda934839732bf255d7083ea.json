{"ast":null,"code":"!function (t, e) {\n  if (\"function\" == typeof define && define.amd) define([\"exports\"], e);else if (\"undefined\" != typeof exports) e(exports);else {\n    var s = {};\n    e(s), t.Hashids = s;\n  }\n}(this, function (t) {\n  \"use strict\";\n\n  function h(t, e) {\n    for (var s = 0; s < e.length; s++) {\n      var h = e[s];\n      h.enumerable = h.enumerable || !1, h.configurable = !0, \"value\" in h && (h.writable = !0), Object.defineProperty(t, h.key, h);\n    }\n  }\n\n  Object.defineProperty(t, \"__esModule\", {\n    value: !0\n  }), t.default = void 0;\n\n  var e = function () {\n    function u() {\n      var t = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : \"\",\n          e = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : 0,\n          s = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890\";\n      !function (t, e) {\n        if (!(t instanceof e)) throw new TypeError(\"Cannot call a class as a function\");\n      }(this, u);\n      var h,\n          a,\n          n = \"\";\n      this.escapeRegExp = function (t) {\n        return t.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, \"\\\\$&\");\n      }, this.parseInt = function (t, e) {\n        return /^(-|\\+)?([0-9]+|Infinity)$/.test(t) ? parseInt(t, e) : NaN;\n      }, this.seps = \"cfhistuCFHISTU\", this.minLength = 0 < parseInt(e, 10) ? e : 0, this.salt = \"string\" == typeof t ? t : \"\", \"string\" == typeof s && (this.alphabet = s);\n\n      for (var r = 0; r !== this.alphabet.length; r++) {\n        -1 === n.indexOf(this.alphabet.charAt(r)) && (n += this.alphabet.charAt(r));\n      }\n\n      if (this.alphabet = n, this.alphabet.length < 16) throw \"error: alphabet must contain at least X unique characters\".replace(\"X\", 16);\n      if (-1 !== this.alphabet.search(\" \")) throw \"error: alphabet cannot contain spaces\";\n\n      for (var i = 0; i !== this.seps.length; i++) {\n        var l = this.alphabet.indexOf(this.seps.charAt(i));\n        -1 === l ? this.seps = this.seps.substr(0, i) + \" \" + this.seps.substr(i + 1) : this.alphabet = this.alphabet.substr(0, l) + \" \" + this.alphabet.substr(l + 1);\n      }\n\n      this.alphabet = this.alphabet.replace(/ /g, \"\"), this.seps = this.seps.replace(/ /g, \"\"), this.seps = this._shuffle(this.seps, this.salt), (!this.seps.length || 3.5 < this.alphabet.length / this.seps.length) && (h = Math.ceil(this.alphabet.length / 3.5)) > this.seps.length && (a = h - this.seps.length, this.seps += this.alphabet.substr(0, a), this.alphabet = this.alphabet.substr(a)), this.alphabet = this._shuffle(this.alphabet, this.salt);\n      var p = Math.ceil(this.alphabet.length / 12);\n      this.alphabet.length < 3 ? (this.guards = this.seps.substr(0, p), this.seps = this.seps.substr(p)) : (this.guards = this.alphabet.substr(0, p), this.alphabet = this.alphabet.substr(p));\n    }\n\n    var t, e, s;\n    return t = u, (e = [{\n      key: \"encode\",\n      value: function value() {\n        for (var t = arguments.length, e = new Array(t), s = 0; s < t; s++) {\n          e[s] = arguments[s];\n        }\n\n        if (!e.length) return \"\";\n        if (e[0] && e[0].constructor === Array && !(e = e[0]).length) return \"\";\n\n        for (var h = 0; h !== e.length; h++) {\n          if (e[h] = this.parseInt(e[h], 10), !(0 <= e[h])) return \"\";\n        }\n\n        return this._encode(e);\n      }\n    }, {\n      key: \"decode\",\n      value: function value(t) {\n        return t && t.length && \"string\" == typeof t ? this._decode(t, this.alphabet) : [];\n      }\n    }, {\n      key: \"encodeHex\",\n      value: function value(t) {\n        if (t = t.toString(), !/^[0-9a-fA-F]+$/.test(t)) return \"\";\n\n        for (var e = t.match(/[\\w\\W]{1,12}/g), s = 0; s !== e.length; s++) {\n          e[s] = parseInt(\"1\" + e[s], 16);\n        }\n\n        return this.encode.apply(this, e);\n      }\n    }, {\n      key: \"decodeHex\",\n      value: function value(t) {\n        for (var e = [], s = this.decode(t), h = 0; h !== s.length; h++) {\n          e += s[h].toString(16).substr(1);\n        }\n\n        return e;\n      }\n    }, {\n      key: \"_encode\",\n      value: function value(t) {\n        for (var e, s = this.alphabet, h = 0, a = 0; a !== t.length; a++) {\n          h += t[a] % (a + 100);\n        }\n\n        for (var n = e = s.charAt(h % s.length), r = 0; r !== t.length; r++) {\n          var i = t[r],\n              l = n + this.salt + s;\n          s = this._shuffle(s, l.substr(0, s.length));\n\n          var p = this._toAlphabet(i, s);\n\n          if (e += p, r + 1 < t.length) {\n            var u = (i %= p.charCodeAt(0) + r) % this.seps.length;\n            e += this.seps.charAt(u);\n          }\n        }\n\n        if (e.length < this.minLength) {\n          var o = (h + e[0].charCodeAt(0)) % this.guards.length,\n              f = this.guards[o];\n          (e = f + e).length < this.minLength && (o = (h + e[2].charCodeAt(0)) % this.guards.length, e += f = this.guards[o]);\n        }\n\n        for (var c = parseInt(s.length / 2, 10); e.length < this.minLength;) {\n          var g = (e = (s = this._shuffle(s, s)).substr(c) + e + s.substr(0, c)).length - this.minLength;\n          0 < g && (e = e.substr(g / 2, this.minLength));\n        }\n\n        return e;\n      }\n    }, {\n      key: \"_decode\",\n      value: function value(t, e) {\n        var s = [],\n            h = 0,\n            a = new RegExp(\"[\".concat(this.escapeRegExp(this.guards), \"]\"), \"g\"),\n            n = t.replace(a, \" \"),\n            r = n.split(\" \");\n\n        if (3 !== r.length && 2 !== r.length || (h = 1), void 0 !== (n = r[h])[0]) {\n          var i = n[0];\n          n = n.substr(1), a = new RegExp(\"[\".concat(this.escapeRegExp(this.seps), \"]\"), \"g\"), r = (n = n.replace(a, \" \")).split(\" \");\n\n          for (var l = 0; l !== r.length; l++) {\n            var p = r[l],\n                u = i + this.salt + e;\n            e = this._shuffle(e, u.substr(0, e.length)), s.push(this._fromAlphabet(p, e));\n          }\n\n          this.encode(s) !== t && (s = []);\n        }\n\n        return s;\n      }\n    }, {\n      key: \"_shuffle\",\n      value: function value(t, e) {\n        var s;\n        if (!e.length) return t;\n\n        for (var h = (t = t.split(\"\")).length - 1, a = 0, n = 0, r = 0; 0 < h; h--, a++) {\n          a %= e.length, n += s = e.charCodeAt(a);\n          var i = t[r = (s + a + n) % h];\n          t[r] = t[h], t[h] = i;\n        }\n\n        return t = t.join(\"\");\n      }\n    }, {\n      key: \"_toAlphabet\",\n      value: function value(t, e) {\n        for (var s = \"\"; s = e.charAt(t % e.length) + s, t = parseInt(t / e.length, 10);) {\n          ;\n        }\n\n        return s;\n      }\n    }, {\n      key: \"_fromAlphabet\",\n      value: function value(t, s) {\n        return t.split(\"\").map(function (t) {\n          return s.indexOf(t);\n        }).reduce(function (t, e) {\n          return t * s.length + e;\n        }, 0);\n      }\n    }]) && h(t.prototype, e), s && h(t, s), u;\n  }();\n\n  t.default = e;\n});","map":null,"metadata":{},"sourceType":"script"}