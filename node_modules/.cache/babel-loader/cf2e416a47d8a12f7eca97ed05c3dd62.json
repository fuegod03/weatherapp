{"ast":null,"code":"var _jsxFileName = \"/Users/jcdev/Projects/weatherapp/src/body/googleMap/Trymap.js\";\nimport React, { Component, Fragment } from 'react';\nimport isEmpty from 'lodash.isempty'; // examples:\n\nimport GoogleMap from '../components/GoogleMap'; // consts\n\nimport LOS_ANGELES_CENTER from '../const/la_center';\n\nclass Heatmap extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      places: []\n    };\n  }\n\n  componentDidMount() {\n    fetch('places.json').then(response => response.json()).then(data => this.setState({\n      places: data.results\n    }));\n  }\n\n  render() {\n    const places = this.state.places;\n    const data = places.map(place => ({\n      lat: place.geometry.location.lat,\n      lng: place.geometry.location.lng,\n      weight: Math.floor(Math.random() * Math.floor(5))\n    }));\n    const heatmapData = {\n      positions: data,\n      options: {\n        radius: 20,\n        opacity: 1\n      }\n    };\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, !isEmpty(places) && React.createElement(GoogleMap, {\n      defaultZoom: 10,\n      defaultCenter: LOS_ANGELES_CENTER,\n      heatmap: heatmapData,\n      bootstrapURLKeys: {\n        key: process.env.REACT_APP_MAP_KEY,\n        libraries: ['visualization']\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Heatmap;","map":{"version":3,"sources":["/Users/jcdev/Projects/weatherapp/src/body/googleMap/Trymap.js"],"names":["React","Component","Fragment","isEmpty","GoogleMap","LOS_ANGELES_CENTER","Heatmap","constructor","props","state","places","componentDidMount","fetch","then","response","json","data","setState","results","render","map","place","lat","geometry","location","lng","weight","Math","floor","random","heatmapData","positions","options","radius","opacity","key","process","env","REACT_APP_MAP_KEY","libraries"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,gBAApB,C,CAEA;;AACA,OAAOC,SAAP,MAAsB,yBAAtB,C,CAEA;;AACA,OAAOC,kBAAP,MAA+B,oBAA/B;;AAEA,MAAMC,OAAN,SAAsBL,SAAtB,CAAgC;AAC9BM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE;AADG,KAAb;AAGD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK,CAAC,aAAD,CAAL,CACGC,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQG,IAAI,IAAI,KAAKC,QAAL,CAAc;AAAEP,MAAAA,MAAM,EAAEM,IAAI,CAACE;AAAf,KAAd,CAFhB;AAGD;;AAEDC,EAAAA,MAAM,GAAG;AAAA,UACCT,MADD,GACY,KAAKD,KADjB,CACCC,MADD;AAEP,UAAMM,IAAI,GAAGN,MAAM,CAACU,GAAP,CAAWC,KAAK,KAAK;AAChCC,MAAAA,GAAG,EAAED,KAAK,CAACE,QAAN,CAAeC,QAAf,CAAwBF,GADG;AAEhCG,MAAAA,GAAG,EAAEJ,KAAK,CAACE,QAAN,CAAeC,QAAf,CAAwBC,GAFG;AAGhCC,MAAAA,MAAM,EAAEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBF,IAAI,CAACC,KAAL,CAAW,CAAX,CAA3B;AAHwB,KAAL,CAAhB,CAAb;AAKA,UAAME,WAAW,GAAG;AAClBC,MAAAA,SAAS,EAAEf,IADO;AAElBgB,MAAAA,OAAO,EAAE;AACPC,QAAAA,MAAM,EAAE,EADD;AAEPC,QAAAA,OAAO,EAAE;AAFF;AAFS,KAApB;AAQA,WACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,CAAC/B,OAAO,CAACO,MAAD,CAAR,IACC,oBAAC,SAAD;AACE,MAAA,WAAW,EAAE,EADf;AAEE,MAAA,aAAa,EAAEL,kBAFjB;AAGE,MAAA,OAAO,EAAEyB,WAHX;AAIE,MAAA,gBAAgB,EAAE;AAChBK,QAAAA,GAAG,EAAEC,OAAO,CAACC,GAAR,CAAYC,iBADD;AAEhBC,QAAAA,SAAS,EAAE,CAAC,eAAD;AAFK,OAJpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADF;AAeD;;AA7C6B;;AAgDhC,eAAejC,OAAf","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport isEmpty from 'lodash.isempty';\n\n// examples:\nimport GoogleMap from '../components/GoogleMap';\n\n// consts\nimport LOS_ANGELES_CENTER from '../const/la_center';\n\nclass Heatmap extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      places: [],\n    };\n  }\n\n  componentDidMount() {\n    fetch('places.json')\n      .then(response => response.json())\n      .then(data => this.setState({ places: data.results }));\n  }\n\n  render() {\n    const { places } = this.state;\n    const data = places.map(place => ({\n      lat: place.geometry.location.lat,\n      lng: place.geometry.location.lng,\n      weight: Math.floor(Math.random() * Math.floor(5)),\n    }));\n    const heatmapData = {\n      positions: data,\n      options: {\n        radius: 20,\n        opacity: 1,\n      },\n    };\n\n    return (\n      <Fragment>\n        {!isEmpty(places) && (\n          <GoogleMap\n            defaultZoom={10}\n            defaultCenter={LOS_ANGELES_CENTER}\n            heatmap={heatmapData}\n            bootstrapURLKeys={{\n              key: process.env.REACT_APP_MAP_KEY,\n              libraries: ['visualization'],\n            }}\n          />\n        )}\n      </Fragment>\n    );\n  }\n}\n\nexport default Heatmap;\n"]},"metadata":{},"sourceType":"module"}