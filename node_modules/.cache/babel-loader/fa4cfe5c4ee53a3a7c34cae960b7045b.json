{"ast":null,"code":"var _jsxFileName = \"/Users/jcdev/Projects/weatherapp copy/src/body/Autocomplete.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nconst API_KEY = process.env.API_KEY;\nconst API_URL = 'http://api.musicgraph.com/api/v2/artist/suggest';\n\nclass Search extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n\n    this.getInfo = () => {\n      fetch(\"https://cors-anywhere.herokuapp.com/\" + this.state.uri + this.state.currentPosition + '&days=7').then(res => res.json()).then(({\n        data\n      }) => {\n        this.setState({\n          results: data.data\n        });\n      });\n    };\n\n    this.handleInputChange = () => {\n      this.setState({\n        query: this.search.value\n      }, () => {\n        if (this.state.query && this.state.query.length > 1) {\n          if (this.state.query.length % 2 === 0) {\n            this.getInfo();\n          }\n        } else if (!this.state.query) {}\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      placeholder: \"Search for...\",\n      ref: input => this.search = input,\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }), React.createElement(Suggestions, {\n      results: this.state.results,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Search;","map":{"version":3,"sources":["/Users/jcdev/Projects/weatherapp copy/src/body/Autocomplete.js"],"names":["React","Component","axios","API_KEY","process","env","API_URL","Search","state","getInfo","fetch","uri","currentPosition","then","res","json","data","setState","results","handleInputChange","query","search","value","length","render","input"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;MAEQC,O,GAAYC,OAAO,CAACC,G,CAApBF,O;AACR,MAAMG,OAAO,GAAG,iDAAhB;;AAEA,MAAMC,MAAN,SAAqBN,SAArB,CAA+B;AAAA;AAAA;AAAA,SAC7BO,KAD6B,GACrB,EADqB;;AAAA,SAI7BC,OAJ6B,GAInB,MAAM;AAChBC,MAAAA,KAAK,CAAC,yCAAyC,KAAKF,KAAL,CAAWG,GAApD,GAA0D,KAAKH,KAAL,CAAWI,eAArE,GAAuF,SAAxF,CAAL,CAAwGC,IAAxG,CAA8GC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAAtH,EACKF,IADL,CACU,CAAC;AAAEG,QAAAA;AAAF,OAAD,KAAc;AAClB,aAAKC,QAAL,CAAc;AACZC,UAAAA,OAAO,EAAEF,IAAI,CAACA;AADF,SAAd;AAGD,OALL;AAMC,KAX4B;;AAAA,SAa7BG,iBAb6B,GAaT,MAAM;AACxB,WAAKF,QAAL,CAAc;AACZG,QAAAA,KAAK,EAAE,KAAKC,MAAL,CAAYC;AADP,OAAd,EAEG,MAAM;AACP,YAAI,KAAKd,KAAL,CAAWY,KAAX,IAAoB,KAAKZ,KAAL,CAAWY,KAAX,CAAiBG,MAAjB,GAA0B,CAAlD,EAAqD;AACnD,cAAI,KAAKf,KAAL,CAAWY,KAAX,CAAiBG,MAAjB,GAA0B,CAA1B,KAAgC,CAApC,EAAuC;AACrC,iBAAKd,OAAL;AACD;AACF,SAJD,MAIO,IAAI,CAAC,KAAKD,KAAL,CAAWY,KAAhB,EAAuB,CAC7B;AACF,OATD;AAUD,KAxB4B;AAAA;;AA0B7BI,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,WAAW,EAAC,eADd;AAEE,MAAA,GAAG,EAAEC,KAAK,IAAI,KAAKJ,MAAL,GAAcI,KAF9B;AAGE,MAAA,QAAQ,EAAE,KAAKN,iBAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAME,oBAAC,WAAD;AAAa,MAAA,OAAO,EAAE,KAAKX,KAAL,CAAWU,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CADF;AAUD;;AArC4B;;AAwC/B,eAAeX,MAAf","sourcesContent":["import React, { Component } from 'react'\nimport axios from 'axios'\n\nconst { API_KEY } = process.env\nconst API_URL = 'http://api.musicgraph.com/api/v2/artist/suggest'\n\nclass Search extends Component {\n  state = {\n  }\n\n  getInfo = () => {\n  fetch(\"https://cors-anywhere.herokuapp.com/\" + this.state.uri + this.state.currentPosition + '&days=7').then((res) => res.json())\n      .then(({ data }) => {\n        this.setState({\n          results: data.data\n        })\n      })\n  }\n\n  handleInputChange = () => {\n    this.setState({\n      query: this.search.value\n    }, () => {\n      if (this.state.query && this.state.query.length > 1) {\n        if (this.state.query.length % 2 === 0) {\n          this.getInfo()\n        }\n      } else if (!this.state.query) {\n      }\n    })\n  }\n\n  render() {\n    return (\n      <form>\n        <input\n          placeholder=\"Search for...\"\n          ref={input => this.search = input}\n          onChange={this.handleInputChange}\n        />\n        <Suggestions results={this.state.results} />\n      </form>\n    )\n  }\n}\n\nexport default Search\n"]},"metadata":{},"sourceType":"module"}