{"ast":null,"code":"var _jsxFileName = \"/Users/jcdev/Projects/weatherapp/src/body/googleMap/Mapi.js\";\nimport React, { PropTypes } from \"react\";\nimport GoogleMap from \"react-google-map\";\nimport GoogleMapLoader from \"react-google-maps-loader\";\nconst MY_API_KEY = \"AIzaSyACJaD84u2ynHqmHBGN3zrqaj1jbTicNRg\"; // fake\n\nconst Map = ({\n  googleMaps\n}) => // GoogleMap component has a 100% height style.\n// You have to set the DOM parent height.\n// So you can perfectly handle responsive with differents heights.\nReact.createElement(\"div\", {\n  className: styles.map,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13\n  },\n  __self: this\n}, React.createElement(GoogleMap, {\n  googleMaps: googleMaps // You can add and remove coordinates on the fly.\n  // The map will rerender new markers and remove the old ones.\n  ,\n  coordinates: [{\n    title: \"Toulouse\",\n    icon: iconMarker,\n    position: {\n      lat: 43.604363,\n      lng: 1.443363\n    },\n    onLoaded: (googleMaps, map, marker) => {\n      // Set Marker animation\n      marker.setAnimation(googleMaps.Animation.BOUNCE); // Define Marker InfoWindow\n\n      const infoWindow = new googleMaps.InfoWindow({\n        content: \"\\n                <div>\\n                  <h3>Toulouse<h3>\\n                  <div>\\n                    Toulouse is the capital city of the southwestern\\n                    French department of Haute-Garonne,\\n                    as well as of the Occitanie region.\\n                  </div>\\n                </div>\\n              \"\n      }); // Open InfoWindow directly\n\n      infoWindow.open(map, marker);\n    }\n  }],\n  center: {\n    lat: 43.604363,\n    lng: 1.443363\n  },\n  zoom: 8,\n  onLoaded: (googleMaps, map) => {\n    map.setMapTypeId(googleMaps.MapTypeId.SATELLITE);\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14\n  },\n  __self: this\n}));\n\nMap.propTypes = {\n  googleMaps: PropTypes.object.isRequired\n};\nexport default GoogleMapLoader(Map, {\n  libraries: [\"places\"],\n  key: MY_API_KEY\n});","map":{"version":3,"sources":["/Users/jcdev/Projects/weatherapp/src/body/googleMap/Mapi.js"],"names":["React","PropTypes","GoogleMap","GoogleMapLoader","MY_API_KEY","Map","googleMaps","styles","map","title","icon","iconMarker","position","lat","lng","onLoaded","marker","setAnimation","Animation","BOUNCE","infoWindow","InfoWindow","content","open","setMapTypeId","MapTypeId","SATELLITE","propTypes","object","isRequired","libraries","key"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AAEA,OAAOC,SAAP,MAAsB,kBAAtB;AACA,OAAOC,eAAP,MAA4B,0BAA5B;AAGA,MAAMC,UAAU,GAAG,yCAAnB,C,CAA6D;;AAE7D,MAAMC,GAAG,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KACV;AACA;AACA;AACA;AAAK,EAAA,SAAS,EAAEC,MAAM,CAACC,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,SAAD;AACE,EAAA,UAAU,EAAEF,UADd,CAEE;AACA;AAHF;AAIE,EAAA,WAAW,EAAE,CACX;AACEG,IAAAA,KAAK,EAAE,UADT;AAEEC,IAAAA,IAAI,EAAEC,UAFR;AAGEC,IAAAA,QAAQ,EAAE;AACRC,MAAAA,GAAG,EAAE,SADG;AAERC,MAAAA,GAAG,EAAE;AAFG,KAHZ;AAOEC,IAAAA,QAAQ,EAAE,CAACT,UAAD,EAAaE,GAAb,EAAkBQ,MAAlB,KAA6B;AACrC;AACAA,MAAAA,MAAM,CAACC,YAAP,CAAoBX,UAAU,CAACY,SAAX,CAAqBC,MAAzC,EAFqC,CAIrC;;AACA,YAAMC,UAAU,GAAG,IAAId,UAAU,CAACe,UAAf,CAA0B;AAC3CC,QAAAA,OAAO;AADoC,OAA1B,CAAnB,CALqC,CAmBrC;;AACAF,MAAAA,UAAU,CAACG,IAAX,CAAgBf,GAAhB,EAAqBQ,MAArB;AACD;AA5BH,GADW,CAJf;AAoCE,EAAA,MAAM,EAAE;AAACH,IAAAA,GAAG,EAAE,SAAN;AAAiBC,IAAAA,GAAG,EAAE;AAAtB,GApCV;AAqCE,EAAA,IAAI,EAAE,CArCR;AAsCE,EAAA,QAAQ,EAAE,CAACR,UAAD,EAAaE,GAAb,KAAqB;AAC7BA,IAAAA,GAAG,CAACgB,YAAJ,CAAiBlB,UAAU,CAACmB,SAAX,CAAqBC,SAAtC;AACD,GAxCH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CAJF;;AAkDArB,GAAG,CAACsB,SAAJ,GAAgB;AACdrB,EAAAA,UAAU,EAAEL,SAAS,CAAC2B,MAAV,CAAiBC;AADf,CAAhB;AAIA,eAAe1B,eAAe,CAACE,GAAD,EAAM;AAClCyB,EAAAA,SAAS,EAAE,CAAC,QAAD,CADuB;AAElCC,EAAAA,GAAG,EAAE3B;AAF6B,CAAN,CAA9B","sourcesContent":["import React, {PropTypes} from \"react\"\n\nimport GoogleMap from \"react-google-map\"\nimport GoogleMapLoader from \"react-google-maps-loader\"\n\n\nconst MY_API_KEY = \"AIzaSyACJaD84u2ynHqmHBGN3zrqaj1jbTicNRg\" // fake\n\nconst Map = ({googleMaps}) => (\n  // GoogleMap component has a 100% height style.\n  // You have to set the DOM parent height.\n  // So you can perfectly handle responsive with differents heights.\n  <div className={styles.map}>\n    <GoogleMap\n      googleMaps={googleMaps}\n      // You can add and remove coordinates on the fly.\n      // The map will rerender new markers and remove the old ones.\n      coordinates={[\n        {\n          title: \"Toulouse\",\n          icon: iconMarker,\n          position: {\n            lat: 43.604363,\n            lng: 1.443363,\n          },\n          onLoaded: (googleMaps, map, marker) => {\n            // Set Marker animation\n            marker.setAnimation(googleMaps.Animation.BOUNCE)\n\n            // Define Marker InfoWindow\n            const infoWindow = new googleMaps.InfoWindow({\n              content: `\n                <div>\n                  <h3>Toulouse<h3>\n                  <div>\n                    Toulouse is the capital city of the southwestern\n                    French department of Haute-Garonne,\n                    as well as of the Occitanie region.\n                  </div>\n                </div>\n              `,\n            })\n\n          \n            // Open InfoWindow directly\n            infoWindow.open(map, marker)\n          },\n        }\n      ]}\n      center={{lat: 43.604363, lng: 1.443363}}\n      zoom={8}\n      onLoaded={(googleMaps, map) => {\n        map.setMapTypeId(googleMaps.MapTypeId.SATELLITE)\n      }}\n    />\n  </div>\n)\n\nMap.propTypes = {\n  googleMaps: PropTypes.object.isRequired,\n}\n\nexport default GoogleMapLoader(Map, {\n  libraries: [\"places\"],\n  key: MY_API_KEY,\n})\n"]},"metadata":{},"sourceType":"module"}