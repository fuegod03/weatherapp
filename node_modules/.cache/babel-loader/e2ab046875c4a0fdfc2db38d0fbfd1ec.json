{"ast":null,"code":"var _jsxFileName = \"/Users/jcdev/Projects/weatherapp/src/body/googleMap/GoogleMap.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { compose, withProps } from \"recompose\";\nimport { withScriptjs, withGoogleMap, GoogleMap, Marker } from \"react-google-maps\";\nconst MyMapComponent = compose(withProps({\n  /**\n   * Note: create and replace your own key in the Google console.\n   * https://console.developers.google.com/apis/dashboard\n   * The key \"AIzaSyBkNaAGLEVq0YLQMi-PYEMabFeREadYe1Q\" can be ONLY used in this sandbox (no forked).\n   */\n  googleMapURL: \"https://maps.googleapis.com/maps/api/js?key=AIzaSyACJaD84u2ynHqmHBGN3zrqaj1jbTicNRg&v=3.exp&libraries=geometry,drawing,places\",\n  loadingElement: React.createElement(\"div\", {\n    style: {\n      height: \"100%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }),\n  containerElement: React.createElement(\"div\", {\n    style: {\n      height: \"400px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }),\n  mapElement: React.createElement(\"div\", {\n    style: {\n      height: \"100%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  })\n}), withScriptjs, withGoogleMap)(props => React.createElement(GoogleMap, {\n  defaultZoom: 8,\n  defaultCenter: {\n    lat: -34.397,\n    lng: 150.644\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27\n  },\n  __self: this\n}, props.isMarkerShown && React.createElement(Marker, {\n  position: {\n    lat: -34.397,\n    lng: 150.644\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29\n  },\n  __self: this\n})));\nexport default MyMapComponent;","map":{"version":3,"sources":["/Users/jcdev/Projects/weatherapp/src/body/googleMap/GoogleMap.js"],"names":["React","ReactDOM","compose","withProps","withScriptjs","withGoogleMap","GoogleMap","Marker","MyMapComponent","googleMapURL","loadingElement","height","containerElement","mapElement","props","lat","lng","isMarkerShown"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,OAAT,EAAkBC,SAAlB,QAAmC,WAAnC;AACA,SACEC,YADF,EAEEC,aAFF,EAGEC,SAHF,EAIEC,MAJF,QAKO,mBALP;AAOA,MAAMC,cAAc,GAAGN,OAAO,CAC5BC,SAAS,CAAC;AACR;;;;;AAKAM,EAAAA,YAAY,EACV,+HAPM;AAQRC,EAAAA,cAAc,EAAE;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM;AAAR,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARR;AASRC,EAAAA,gBAAgB,EAAE;AAAK,IAAA,KAAK,EAAE;AAAED,MAAAA,MAAM;AAAR,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATV;AAURE,EAAAA,UAAU,EAAE;AAAK,IAAA,KAAK,EAAE;AAAEF,MAAAA,MAAM;AAAR,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAVJ,CAAD,CADmB,EAa5BP,YAb4B,EAc5BC,aAd4B,CAAP,CAerBS,KAAK,IACL,oBAAC,SAAD;AAAW,EAAA,WAAW,EAAE,CAAxB;AAA2B,EAAA,aAAa,EAAE;AAAEC,IAAAA,GAAG,EAAE,CAAC,MAAR;AAAgBC,IAAAA,GAAG,EAAE;AAArB,GAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGF,KAAK,CAACG,aAAN,IACC,oBAAC,MAAD;AAAQ,EAAA,QAAQ,EAAE;AAAEF,IAAAA,GAAG,EAAE,CAAC,MAAR;AAAgBC,IAAAA,GAAG,EAAE;AAArB,GAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFJ,CAhBqB,CAAvB;AAuBA,eAAeR,cAAf","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { compose, withProps } from \"recompose\";\nimport {\n  withScriptjs,\n  withGoogleMap,\n  GoogleMap,\n  Marker\n} from \"react-google-maps\";\n\nconst MyMapComponent = compose(\n  withProps({\n    /**\n     * Note: create and replace your own key in the Google console.\n     * https://console.developers.google.com/apis/dashboard\n     * The key \"AIzaSyBkNaAGLEVq0YLQMi-PYEMabFeREadYe1Q\" can be ONLY used in this sandbox (no forked).\n     */\n    googleMapURL:\n      \"https://maps.googleapis.com/maps/api/js?key=AIzaSyACJaD84u2ynHqmHBGN3zrqaj1jbTicNRg&v=3.exp&libraries=geometry,drawing,places\",\n    loadingElement: <div style={{ height: `100%` }} />,\n    containerElement: <div style={{ height: `400px` }} />,\n    mapElement: <div style={{ height: `100%` }} />\n  }),\n  withScriptjs,\n  withGoogleMap\n)(props => (\n  <GoogleMap defaultZoom={8} defaultCenter={{ lat: -34.397, lng: 150.644 }}>\n    {props.isMarkerShown && (\n      <Marker position={{ lat: -34.397, lng: 150.644 }} />\n    )}\n  </GoogleMap>\n));\n\nexport default MyMapComponent\n"]},"metadata":{},"sourceType":"module"}