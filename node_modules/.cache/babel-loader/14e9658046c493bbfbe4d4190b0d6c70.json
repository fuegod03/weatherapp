{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"/Users/jcdev/Projects/weatherapp/node_modules/@babel/runtime/regenerator\");\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var gen = fn.apply(this, arguments);\n    return new Promise(function (resolve, reject) {\n      function step(key, arg) {\n        try {\n          var info = gen[key](arg);\n          var value = info.value;\n        } catch (error) {\n          reject(error);\n          return;\n        }\n\n        if (info.done) {\n          resolve(value);\n        } else {\n          return Promise.resolve(value).then(function (value) {\n            step(\"next\", value);\n          }, function (err) {\n            step(\"throw\", err);\n          });\n        }\n      }\n\n      return step(\"next\");\n    });\n  };\n}\n\nvar Q = require('q');\n\nvar debug = require('debug')('react-ssr:fetchData');\n\nrequire('regenerator-runtime/runtime.js');\n\nvar executeFetchData = function () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(component, match, req, res) {\n    var fetch, keys, props, result, response, updatedKeys, responses;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(typeof component.fetchData !== 'function')) {\n              _context.next = 3;\n              break;\n            }\n\n            debug('fetchData is not a function or not static on ' + component.displayName);\n            return _context.abrupt('return', new Error('Fetch data not defined or not a function.'));\n\n          case 3:\n            fetch = component.fetchData({\n              match: match,\n              req: req,\n              res: res,\n              isServerRender: !!req\n            });\n            keys = Object.keys(fetch || {}) || [];\n            props = {};\n            result = {};\n            result[component.displayName] = {};\n\n            if (keys.length) {\n              _context.next = 29;\n              break;\n            }\n\n            _context.prev = 9;\n            response = void 0;\n            _context.prev = 11;\n            _context.next = 14;\n            return fetch;\n\n          case 14:\n            response = _context.sent;\n            updatedKeys = Object.keys(response || {});\n            updatedKeys.forEach(function (key) {\n              result[component.displayName][key] = response[key];\n            });\n            _context.next = 23;\n            break;\n\n          case 19:\n            _context.prev = 19;\n            _context.t0 = _context['catch'](11);\n            debug('fetchData failed for ' + component.displayName, _context.t0);\n            props.error = true;\n\n          case 23:\n            _context.next = 28;\n            break;\n\n          case 25:\n            _context.prev = 25;\n            _context.t1 = _context['catch'](9);\n            debug('fetchData failed for ' + component.displayName, _context.t1);\n\n          case 28:\n            return _context.abrupt('return', result);\n\n          case 29:\n            _context.prev = 29;\n            _context.next = 32;\n            return Q.allSettled(keys.map(function (key) {\n              return fetch[key];\n            }));\n\n          case 32:\n            responses = _context.sent;\n            responses.forEach(function (data, index) {\n              if (data.value) {\n                result[component.displayName][keys[index]] = data.value;\n              } else {\n                result[component.displayName][keys[index]] = data.reason;\n                debug('fetchData #' + (index + 1) + ' in ' + component.displayName + ' returned undefined.');\n              }\n            });\n            _context.next = 39;\n            break;\n\n          case 36:\n            _context.prev = 36;\n            _context.t2 = _context['catch'](29);\n            debug('fetchData failed for ' + component.displayName, _context.t2);\n\n          case 39:\n            return _context.abrupt('return', result);\n\n          case 40:\n          case 'end':\n            return _context.stop();\n        }\n      }\n    }, _callee, undefined, [[9, 25], [11, 19], [29, 36]]);\n  }));\n\n  return function executeFetchData(_x, _x2, _x3, _x4) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nmodule.exports = executeFetchData;","map":null,"metadata":{},"sourceType":"script"}