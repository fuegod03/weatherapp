{"ast":null,"code":"var _jsxFileName = \"/Users/jcdev/Projects/weatherapp copy/src/App.js\";\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport './App.css';\nimport Header from './head/Header.js';\nimport Footer from './footer/Footer.js';\nimport Today from './body/Today.js';\nimport axios from 'axios';\nimport fetchMultiple from 'fetch-multiple';\nimport News from './News.js';\nimport Contact from './Contact.js';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      loadingText: \"updating...\",\n      searchByLL: \"\",\n      id: \"\",\n      city: \"\"\n    };\n    this.handleData = this.handleData.bind(this);\n  }\n\n  componentDidMount() {\n    const fetchables = {\n      'http://api.apixu.com/v1/forecast.json?key=82fe923258fa4530a5e235322192604&q=New York': 'json',\n      'http://api.apixu.com/v1/forecast.json?key=82fe923258fa4530a5e235322192604&q=Shanghai': 'json',\n      'http://api.apixu.com/v1/forecast.json?key=82fe923258fa4530a5e235322192604&q=Washington': 'json',\n      'http://api.apixu.com/v1/forecast.json?key=82fe923258fa4530a5e235322192604&q=Moscow': 'json',\n      'http://api.apixu.com/v1/forecast.json?key=82fe923258fa4530a5e235322192604&q=Lima': 'json',\n      'http://api.apixu.com/v1/forecast.json?key=82fe923258fa4530a5e235322192604&q=Mexico City': 'json'\n    };\n    fetchMultiple(fetchables).then(multcity => this.setState({\n      shanghai: multcity['http://api.apixu.com/v1/forecast.json?key=82fe923258fa4530a5e235322192604&q=Shanghai'].current.temp_f,\n      newYork: multcity['http://api.apixu.com/v1/forecast.json?key=82fe923258fa4530a5e235322192604&q=New York'].current.temp_f,\n      washington: multcity['http://api.apixu.com/v1/forecast.json?key=82fe923258fa4530a5e235322192604&q=Washington'].current.temp_f,\n      moscow: multcity['http://api.apixu.com/v1/forecast.json?key=82fe923258fa4530a5e235322192604&q=Moscow'].current.temp_f,\n      lima: multcity['http://api.apixu.com/v1/forecast.json?key=82fe923258fa4530a5e235322192604&q=Lima'].current.temp_f,\n      mexicoCity: multcity['http://api.apixu.com/v1/forecast.json?key=82fe923258fa4530a5e235322192604&q=Mexico City'].current.temp_f\n    })).then(() => console.log(\"made it\")); //   .catch((err) => console.log(err.message))\n    // .then(data => {\n    //   console.log(data['http://api.apixu.com/v1/forecast.json?key=82fe923258fa4530a5e235322192604&q=Lima']);\n    // });\n    // Fetching user location\n\n    navigator.geolocation.getCurrentPosition(pos => {\n      this.setState({\n        currentLatitude: pos.coords.latitude,\n        currentLongitude: pos.coords.longitude,\n        currentPosition: pos.coords.latitude.toString() + \",\" + pos.coords.longitude.toString(),\n        uri: 'http://api.apixu.com/v1/forecast.json?key=82fe923258fa4530a5e235322192604&q='\n      });\n      fetch(\"https://cors-anywhere.herokuapp.com/\" + this.state.uri + this.state.currentPosition + '&days=7').then(res => res.json()).then(todayInfo => this.setState({\n        todayInfo,\n        currentIcon: todayInfo.current.condition.code,\n        forecast: todayInfo.forecast.forecastday,\n        conditionOneDayAhead: todayInfo.forecast.forecastday[1].day.condition,\n        conditionTwoDayAhead: todayInfo.forecast.forecastday[2].day.condition,\n        conditionThreeDayAhead: todayInfo.forecast.forecastday[3].day.condition,\n        conditionFourthDayAhead: todayInfo.forecast.forecastday[4].day.condition,\n        conditionFifthDayAhead: todayInfo.forecast.forecastday[5].day.condition,\n        conditionSixthDayAhead: todayInfo.forecast.forecastday[6].day.condition,\n        currentCountry: todayInfo.location.country\n      })).catch(err => console.log(err.message));\n    }); // Fetching news\n\n    const url = 'https://newsapi.org/v2/top-headlines?' + 'country=us&' + 'apiKey=f8822ecd8b3d4ceb87c8b11367961689';\n    const req = new Request(url);\n    fetch(req).then(res => res.json()).then(news => this.setState({\n      news: news.articles\n    })).catch(err => console.log(err.message));\n  }\n\n  handleData(data) {\n    this.setState({\n      city: data\n    });\n    fetch(this.state.uri + this.state.city + '&days=7').then(res => res.json()).then(todayInfo => this.setState({\n      todayInfo,\n      currentIcon: todayInfo.current.condition.code\n    })).catch(err => console.log(err.message));\n  }\n\n  render() {\n    {\n      console.log(this.state);\n    }\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/home\",\n      render: props => React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(Header, {\n        todayInfo: this.state.todayInfo,\n        currentIcon: this.state.currentIcon,\n        currentLocation: this.state.currentLocation,\n        loading: this.state.loading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(Today, Object.assign({}, this.state, {\n        handlerFromHead: this.handleData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }))), React.createElement(Footer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/about\",\n      render: routeProps => React.createElement(Header, Object.assign({}, routeProps, {\n        todayInfo: this.state.todayInfo,\n        handlerFromHead: this.handleData,\n        currentIcon: this.state.currentIcon,\n        currentLocation: this.state.currentLocation,\n        loading: this.state.loading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/news\",\n      render: routeProps => React.createElement(News, Object.assign({}, routeProps, {\n        currentCountry: this.state.currentCountry,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/contact\",\n      render: routeProps => React.createElement(Contact, Object.assign({}, routeProps, {\n        todayInfo: this.state.todayInfo,\n        handlerFromHead: this.handleData,\n        currentIcon: this.state.currentIcon,\n        currentLocation: this.state.currentLocation,\n        loading: this.state.loading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/jcdev/Projects/weatherapp copy/src/App.js"],"names":["React","Component","BrowserRouter","Router","Route","Header","Footer","Today","axios","fetchMultiple","News","Contact","App","constructor","state","loadingText","searchByLL","id","city","handleData","bind","componentDidMount","fetchables","then","multcity","setState","shanghai","current","temp_f","newYork","washington","moscow","lima","mexicoCity","console","log","navigator","geolocation","getCurrentPosition","pos","currentLatitude","coords","latitude","currentLongitude","longitude","currentPosition","toString","uri","fetch","res","json","todayInfo","currentIcon","condition","code","forecast","forecastday","conditionOneDayAhead","day","conditionTwoDayAhead","conditionThreeDayAhead","conditionFourthDayAhead","conditionFifthDayAhead","conditionSixthDayAhead","currentCountry","location","country","catch","err","message","url","req","Request","news","articles","data","render","props","currentLocation","loading","routeProps"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\nimport {BrowserRouter as Router, Route } from 'react-router-dom'\nimport './App.css';\nimport Header from './head/Header.js'\nimport Footer from './footer/Footer.js'\nimport Today from './body/Today.js'\nimport axios from 'axios';\nimport fetchMultiple from 'fetch-multiple';\nimport News from './News.js'\nimport Contact from './Contact.js'\n\n\nclass App extends Component {\nconstructor(){\n\nsuper()\n this.state ={\n  loadingText:\"updating...\",\n    searchByLL:\"\",\n    id:\"\",\n    city:\"\"\n}\n  this.handleData = this.handleData.bind(this)\n}\n\n\ncomponentDidMount() {\n  const fetchables = {\n    'http://api.apixu.com/v1/forecast.json?key=82fe923258fa4530a5e235322192604&q=New York': 'json',\n    'http://api.apixu.com/v1/forecast.json?key=82fe923258fa4530a5e235322192604&q=Shanghai': 'json',\n      'http://api.apixu.com/v1/forecast.json?key=82fe923258fa4530a5e235322192604&q=Washington': 'json',\n      'http://api.apixu.com/v1/forecast.json?key=82fe923258fa4530a5e235322192604&q=Moscow': 'json',\n      'http://api.apixu.com/v1/forecast.json?key=82fe923258fa4530a5e235322192604&q=Lima': 'json',\n    'http://api.apixu.com/v1/forecast.json?key=82fe923258fa4530a5e235322192604&q=Mexico City': 'json',\n  };\n\n  fetchMultiple(fetchables)\n  .then((multcity) => this.setState({\n      shanghai:multcity['http://api.apixu.com/v1/forecast.json?key=82fe923258fa4530a5e235322192604&q=Shanghai'].current.temp_f,\n      newYork:multcity['http://api.apixu.com/v1/forecast.json?key=82fe923258fa4530a5e235322192604&q=New York'].current.temp_f,\n      washington:multcity['http://api.apixu.com/v1/forecast.json?key=82fe923258fa4530a5e235322192604&q=Washington'].current.temp_f,\n      moscow:multcity['http://api.apixu.com/v1/forecast.json?key=82fe923258fa4530a5e235322192604&q=Moscow'].current.temp_f,\n      lima:multcity['http://api.apixu.com/v1/forecast.json?key=82fe923258fa4530a5e235322192604&q=Lima'].current.temp_f,\n      mexicoCity:multcity['http://api.apixu.com/v1/forecast.json?key=82fe923258fa4530a5e235322192604&q=Mexico City'].current.temp_f\n\n  })).then( () => console.log(\"made it\"));\n    //   .catch((err) => console.log(err.message))\n    // .then(data => {\n    //   console.log(data['http://api.apixu.com/v1/forecast.json?key=82fe923258fa4530a5e235322192604&q=Lima']);\n    // });\n  // Fetching user location\n  navigator.geolocation.getCurrentPosition((pos) => {\n        this.setState({\n            currentLatitude:pos.coords.latitude,\n            currentLongitude:pos.coords.longitude,\n            currentPosition: pos.coords.latitude.toString() + \",\" + pos.coords.longitude.toString(),\n            uri:'http://api.apixu.com/v1/forecast.json?key=82fe923258fa4530a5e235322192604&q='\n        });\n        fetch(\"https://cors-anywhere.herokuapp.com/\" + this.state.uri + this.state.currentPosition + '&days=7').then((res) => res.json())\n        .then((todayInfo) => this.setState({\n            todayInfo,\n            currentIcon:todayInfo.current.condition.code,\n            forecast:todayInfo.forecast.forecastday,\n            conditionOneDayAhead:todayInfo.forecast.forecastday[1].day.condition,\n            conditionTwoDayAhead:todayInfo.forecast.forecastday[2].day.condition,\n            conditionThreeDayAhead:todayInfo.forecast.forecastday[3].day.condition,\n            conditionFourthDayAhead:todayInfo.forecast.forecastday[4].day.condition,\n            conditionFifthDayAhead:todayInfo.forecast.forecastday[5].day.condition,\n            conditionSixthDayAhead:todayInfo.forecast.forecastday[6].day.condition,\n            currentCountry:todayInfo.location.country\n        }))\n            .catch((err) => console.log(err.message))\n    });\n\n    // Fetching news\n    const url = 'https://newsapi.org/v2/top-headlines?' +\n              'country=us&' +\n              'apiKey=f8822ecd8b3d4ceb87c8b11367961689';\n    const req = new Request(url);\n    fetch(req)\n    .then((res) => res.json())\n    .then((news) => this.setState({\n        news:news.articles\n    })).catch((err) => console.log(err.message));\n\n\n}\n\n\n\n\n\nhandleData(data) {\n  this.setState({\n    city: data\n  });\n  fetch( this.state.uri + this.state.city+ '&days=7').then((res) => res.json())\n  .then((todayInfo) => this.setState({\n      todayInfo,\n      currentIcon:todayInfo.current.condition.code\n  }))\n      .catch((err) => console.log(err.message))\n}\n\n\n\n\n\nrender (){\n  {console.log(this.state)}\n  return (\n    <div>\n    <Router >\n   <Route exact path=\"/home\" render={props => (\n       <React.Fragment>\n         <Header todayInfo={this.state.todayInfo}  currentIcon={this.state.currentIcon}  currentLocation={this.state.currentLocation} loading={this.state.loading}/>\n         <div className=\"App\">\n         <Today {...this.state} handlerFromHead={this.handleData} />\n         </div>\n         <Footer />\n              </React.Fragment>\n     )} />\n     <Route  path=\"/about\"\n       render ={(routeProps) => ( <Header {...routeProps} todayInfo={this.state.todayInfo} handlerFromHead={this.handleData} currentIcon={this.state.currentIcon}  currentLocation={this.state.currentLocation} loading={this.state.loading}/> )}\n       />\n     <Route  path=\"/news\"\n    render ={(routeProps) => ( <News {...routeProps} currentCountry={this.state.currentCountry}/> )}\n    />\n  <Route  path=\"/contact\"\n      render ={(routeProps) => ( <Contact {...routeProps} todayInfo={this.state.todayInfo} handlerFromHead={this.handleData} currentIcon={this.state.currentIcon}  currentLocation={this.state.currentLocation} loading={this.state.loading}/> )}\n      />\n   </Router>\n\n\n    </div>\n  );\n}\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}